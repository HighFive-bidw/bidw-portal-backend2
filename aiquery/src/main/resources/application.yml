server:
  port: ${SERVER_PORT:8083}
  servlet:
    context-path: /
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}

spring:
  application:
    name: ai-query-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:aidb}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  redis:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}  # 필요한 경우 비밀번호 설정
      timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1

service:
  report:
    url: ${REPORT_SERVICE_URL:http://localhost:8081}
  ai:
    api-key: ${AI_API_KEY:your-api-key}
    model: ${AI_MODEL:claude-3-haiku-20240307}
    mode: online
    use-mock-llm: false

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  api-docs:
    path: /api-docs

logging:
  level:
    com.ktds.bidw.aiquery: ${LOG_LEVEL:DEBUG}
    org.springframework.data.redis: WARN

# 스프링 액추에이터 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,env
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true