server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}

spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:20.249.114.151}:${POSTGRES_PORT:5432}/${POSTGRES_DB:authdb}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:Passw0rd}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

jwt:
  secret-key: ${JWT_SECRET_KEY:defaultSecretKeyForDevelopmentEnvironmentOnlyDoNotUseInProduction}
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY:3600000}
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY:86400000}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  api-docs:
    path: /api-docs

logging:
  level:
    com.ktds.bidw.auth: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      app: ${spring.application.name}
      instance: ${HOSTNAME:localhost}:${server.port}
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        azure.storage.blob.operation: true
        excel.generation: true
        report.download: true
      sla:
        http.server.requests: 100ms, 500ms, 1000ms, 2000ms
        azure.storage.blob.operation: 50ms, 100ms, 200ms, 500ms
        excel.generation: 200ms, 500ms, 1000ms, 2000ms
        report.download: 500ms, 1000ms, 2000ms, 5000ms